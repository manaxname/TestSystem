@model IEnumerable<TestSystem.Web.Models.AnswerModel>

@{
    ViewData["Title"] = "Edit Question";

    int testId = 0;
    if (ViewData.ContainsKey("TestId"))
    {
        int.TryParse(ViewData["TestId"].ToString(), out testId);
    }

    int questionId = 0;
    if (ViewData.ContainsKey("QuestionId"))
    {
        int.TryParse(ViewData["QuestionId"].ToString(), out questionId);
    }

    QuestionTypes? questionType = null;
    if (ViewData.ContainsKey("QuestionType"))
    {
        questionType = (QuestionTypes)Enum.Parse(typeof(QuestionTypes), ViewData["QuestionType"].ToString());
    }

    int answersCount = 0;
    if (ViewData.ContainsKey("AnswersCount"))
    {
        int.TryParse(ViewData["AnswersCount"].ToString(), out answersCount);
    }

    int? topicId = null;
    if (ViewData.ContainsKey("TopicId"))
    {
        topicId = int.Parse(ViewData["TopicId"].ToString());
    }
}

<h4 class="d-flex justify-content-center"> @ViewData["QuestionText"]</h4>

<p>
    @if (questionType == QuestionTypes.Text && answersCount < 1)
    {
        @Html.ActionLink("Create new Answer", "CreateAnswer", "Test",
            new { @TopicId = topicId, @TestId = testId, @QuestionId = questionId, @QuestionType = questionType }, new { @class = "btn btn-primary" })
    }
    else if (questionType == (int)QuestionTypes.Option)
    {
        @Html.ActionLink("Create new Answer", "CreateAnswer", "Test",
              new { @TopicId = topicId, @TestId = testId, @QuestionId = questionId, @QuestionType = questionType }, new { @class = "btn btn-primary" })
    }
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            @if (questionType == QuestionTypes.Option)
            {
                <th>
                    @Html.DisplayNameFor(model => model.IsValid)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.QuestionId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                @if (questionType == QuestionTypes.Option)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.IsValid)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.QuestionId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @Html.ActionLink("Back to Questions", "EditTest", "Test", new { @TopicId = topicId, @TestId = testId }, new { @class = "btn btn-secondary" })
</div>